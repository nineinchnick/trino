name: "update-check-action"
description: "Perform common initialization steps for SEP workflow"
inputs:
  pull_request_number:
    description: "Number of the pull request to update checks in"
    required: true
  check_name:
    description: "Name of the check to update"
    required: true
  conclusion:
    description: "Conclusion to set for the check"
    required: true
  github_token:
    description: "GitHub token to authenticate with"
    default: ${{ github.token }}

runs: 
  using: composite
  steps:
    - uses: actions/github-script@v5
      id: update-check-run
      if: ${{ always() }}
      env:
        number: ${{ inputs.pull_request_number }}
        check_name: ${{ inputs.check_name }}
        # Conveniently, job.status maps to https://developer.github.com/v3/checks/runs/#update-a-check-run
        conclusion: ${{ inputs.conclusion }}
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const { data: pull } = await github.rest.pulls.get({
            ...context.repo,
            pull_number: process.env.number
          });
          const ref = pull.head.sha;
          const { data: checks } = await github.rest.checks.listForRef({
            ...context.repo,
            ref
          });
          const check = checks.check_runs.filter(c => c.name === process.env.check_name);
          if (check) {
            const { data: result } = await github.rest.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion
            });
            return result;
          }
          const { data: result } = await github.rest.checks.create({
            ...context.repo,
            name: process.env.check_name,
            head_sha: ref,
            status: 'completed',
            conclusion: process.env.conclusion
          });
          return result;
